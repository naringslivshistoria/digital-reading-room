name: Continuous Integration

on:
  push:
    branches:
    - main
    - chore/push-images
    # TODO: Also run for tags (or make a separate workflow).

jobs:

  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        context:
        - comprima-adapter
        - reading-room-frontend
        - reading-room-search

    steps:
    - name: üõéÔ∏è Checkout
      uses: actions/checkout@v3

    - name: üé´ Update Patch Verision
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        npm version patch
        git push

    - name: üìù Get current version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@main

    - name: üì¶ Prepare
      id: prep
      run: |
        VERSION="v${{ steps.package-version.outputs.current-version}}"
        TS=$(date +%s)
        BUILD_ID="${TS}"
        CHANNEL_ID=canary
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          BUILD_ID=${GITHUB_REF/refs\/tags\//}
          CHANNEL_ID=latest
        fi
        BUILD_ID="${CHANNEL_ID}.${BUILD_ID}"
        echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
        echo ::set-output name=BUILD_ID::${BUILD_ID}
        echo ::set-output name=CHANNEL_ID::${CHANNEL_ID} 
        echo ::set-output name=VERSION::${VERSION} 


    - name: üîê Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: üîß Build and push to Docker Registry
      uses: docker/build-push-action@v4
      with:
        context: ./packages/${{ matrix.context }}
        push: true
        tags: |
          ghcr.io/naringslivshistoria/${{ matrix.context }}:${{ steps.prep.outputs.BUILD_ID }}
          ghcr.io/naringslivshistoria/${{ matrix.context }}:${{ steps.prep.outputs.CHANNEL_ID }}  
          ghcr.io/naringslivshistoria/${{ matrix.context }}:${{ steps.prep.outputs.VERSION }}
        # TODO: Build args for frontend image
